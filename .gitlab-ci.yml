image: alpine:latest

stages:
    - check-vars
    - vulnerability-scan
    - build
    - test
    - deploy


variables:
  IMAGE_TAG: $CI_PIPELINE_ID-$CI_COMMIT_SHORT_SHA
  IMAGE_URL: $DOCKER_REGISTRY/$CI_PROJECT_PATH
  KANIKO_CACHE_ARGS: "--cache=true --cache-copy-layers=true --cache-ttl=24h"

check-vars:
  stage: check-vars
  script:
    - echo $IMAGE_URL
    - echo $IMAGE_TAG
  tags:
    - "kuber"


vulnerability-scan:
  stage: vulnerability-scan
  image: python:3.9
  script:
    - echo "checking for vulnerabilities"
    - cd $CI_PROJECT_DIR
    - pip install -r requirements.txt
    - pip install jake
    - jake ddt

  tags:
    - "kuber"

build-job:
  stage: build
  image:
    name: $DOCKER_REGISTRY/kaniko:debug
    entrypoint: [""]
  except:
    changes:
      - "*.md"
  script:
    - echo "Building Dockerfile"
    - echo "Image Url $IMAGE_URL:$IMAGE_TAG" 
    - |-
       KANIKOPROXYBUILDARGS=""
       KANIKOCFG="{\"auths\":{\"${DOCKER_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${DOCKER_REGISTRY_USER}" "${DOCKER_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}"
       echo $KANIKOCFG > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile
        $KANIKO_CACHE_ARGS --insecure --skip-tls-verify --destination $IMAGE_URL:$IMAGE_TAG
  tags:
    - "kuber"

test-job1:
  stage: test
  allow_failure:
    exit_codes: 1
  script:
    - echo "This job tests something"
  tags:
    - "kuber"

test-job2:
  stage: test
  script:
    - echo "This job tests something, but takes more time than test-job1."
    - echo "After the echo commands complete, it runs the sleep command for 20 seconds"
    - echo "which simulates a test that runs 20 seconds longer than test-job1"
    - sleep 20
  tags:
    - "kuber"

deploy-stg:
  rules:
      - if: ($CI_COMMIT_MESSAGE =~ /deploy/ && $CI_COMMIT_BRANCH =~ /develop/)
  stage: deploy
  script:
    - echo "Deploying on staging"

  tags:
    - "kuber"

deploy-prod:
  rules:
      - if: '$CI_COMMIT_BRANCH == "main"'
  stage: deploy
  script:
    - echo "Deploying on production"

  tags:
    - "kuber"

